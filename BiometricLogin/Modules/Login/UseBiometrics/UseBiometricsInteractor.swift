//
//  UseBiometricsInteractor.swift
//  BiometricLogin
//
//  Created by Zaim Ramlan on 26/04/2018.
//  Copyright (c) 2018 ZaimRamlan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SwiftKeychainWrapper

protocol UseBiometricsBusinessLogic {
  func UseBiometrics(with request: UseBiometricsModels.UseBiometrics.Request)
}

protocol UseBiometricsDataStore {
}

class UseBiometricsInteractor: UseBiometricsBusinessLogic, UseBiometricsDataStore {
  var worker: BiometricsWorker? = BiometricsWorker()
  var presenter: UseBiometricsPresentationLogic?
  
  // MARK: Use Case - Use Biometrics
  
  func UseBiometrics(with request: UseBiometricsModels.UseBiometrics.Request) {
    worker?.authenticate(completion: { [weak self] (result, error, biometryType) in
      if result == .success, let type = biometryType {
        KeychainWrapper.standard.set(type.rawValue, forKey: KeychainConstants.LocalAuthentication.type)
      }
      
      let response = UseBiometricsModels.UseBiometrics.Response(result: result)
      self?.presenter?.presentUseBiometricsResult(with: response)
    })
  }
}
