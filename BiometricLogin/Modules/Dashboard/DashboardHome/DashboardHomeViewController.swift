//
//  DashboardHomeViewController.swift
//  BiometricLogin
//
//  Created by Zaim Ramlan on 28/04/2018.
//  Copyright (c) 2018 ZaimRamlan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DashboardHomeDisplayLogic: class {
  func displayFetchFromDataStoreResult(with viewModel: DashboardHomeModels.FetchFromDataStore.ViewModel)
  func displayToggleUseBiometricsResult(with viewModel: DashboardHomeModels.ToggleUseBiometrics.ViewModel)
}

class DashboardHomeViewController: UIViewController, DashboardHomeDisplayLogic {

  // MARK: Properties

  var router: (NSObjectProtocol & DashboardHomeRoutingLogic & DashboardHomeDataPassing)?
  var interactor: DashboardHomeBusinessLogic?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup() {
    let viewController = self
    let interactor = DashboardHomeInteractor()
    let presenter = DashboardHomePresenter()
    let router = DashboardHomeRouter()

    viewController.router = router
    viewController.interactor = interactor
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: View Lifecycle

  override func viewDidLoad() {
    super.viewDidLoad()
    setupFetchFromDataStore()
  }
  
  // MARK: Texts
  
  func setupSwitchTitle(with biometrics: DashboardHomeModels.BiometricsType) {
    useBiometricsLabel.text = "Use \(biometrics.rawValue)"
  }

  // MARK: Use Case - Fetch Data From DataStore

  @IBOutlet var useBiometricsLabel: UILabel!
  func setupFetchFromDataStore() {
    let request = DashboardHomeModels.FetchFromDataStore.Request()
    interactor?.fetchFromDataStore(with: request)
  }
  
  func displayFetchFromDataStoreResult(with viewModel: DashboardHomeModels.FetchFromDataStore.ViewModel) {
    setupSwitchTitle(with: viewModel.biometricsType)
    toggleSwitch.setOn(viewModel.useBiometrics, animated: true)
  }
  
  // MARK: Use Case - Toggle Use Biometrics
  
  @IBOutlet var toggleSwitch: UISwitch!
  @IBAction func toggleUseBiometrics(_ sender: Any) {
    let isSwitchOn = toggleSwitch.isOn
    let request = DashboardHomeModels.ToggleUseBiometrics.Request(useBiometrics: isSwitchOn)
    interactor?.toggleUseBiometrics(with: request)
  }
  
  func displayToggleUseBiometricsResult(with viewModel: DashboardHomeModels.ToggleUseBiometrics.ViewModel) {
  }

  // MARK: Use Case - Log Out
  
  @IBAction func logOutButtonClicked(_ sender: Any) {
    router?.routeToWelcomeScreen()
  }
}
